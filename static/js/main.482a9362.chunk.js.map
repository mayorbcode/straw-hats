{"version":3,"sources":["components/gallery/Gallery.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["Gallery","props","loading","className","map","item","href","wiki","target","rel","src","nameQuery","alt","name","role","id","App","useState","info","setInfo","isLoading","setIsLoading","useEffect","fetch","then","res","json","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NA2BeA,G,MAzBC,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACvB,OACE,8BACCA,EAAU,4CACT,qBAAKC,UAAU,UAAf,SAEGF,EAAMG,KAAI,SAACC,GACV,OACE,mBAAiBF,UAAU,OAAOG,KAAMD,EAAKE,KAAMC,OAAO,SAASC,IAAI,aAAvE,SACE,yBAAQN,UAAU,OAAlB,UACE,qBAAKA,UAAU,QAAQO,IAAG,4DAAuDL,EAAKM,UAA5D,QAA6EC,IAAKP,EAAKM,YACjH,uCACE,6BAAKN,EAAKQ,OACV,4BAAIR,EAAKS,cALPT,EAAKU,aCmBVC,MAzBf,WAAgB,IAAD,EACSC,mBAAS,IADlB,mBACRC,EADQ,KACFC,EADE,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,KAiBb,OAbAC,qBAAU,WAERC,MAAM,8DACLC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAG,GACJR,EAAQQ,MAGVN,GAAa,KACZ,IAGD,qCACE,mDACA,cAAC,EAAD,CAASpB,MAAOiB,EAAMhB,QAASkB,QCZtBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.482a9362.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Gallery = ({props, loading}) => {\n  return (\n    <div>\n    {loading ? <h1>Loading...</h1> :\n      <div className=\"gallery\">\n        {/* Map over array and output to DOM */}\n        {props.map((item) => {\n          return (\n            <a key={item.id} className=\"link\" href={item.wiki} target='_blank' rel='noreferrer'>\n              <figure className='card'>\n                <img className='image' src={`https://anime-characters-api.herokuapp.com/images/${item.nameQuery}.jpg`} alt={item.nameQuery}/>\n                <figcaption>\n                  <h2>{item.name}</h2>\n                  <p>{item.role}</p>\n                </figcaption>\n              </figure>\n            </a>\n          )\n        })}  \n      </div>\n      }\n   </div>\n  )\n}\n\nexport default Gallery;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Gallery from '../gallery/Gallery';\n\nfunction App() {\n  let [info, setInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch Data\n    fetch('https://anime-characters-api.herokuapp.com/api/v0/onepiece')\n    .then(res => {\n      return res.json();\n    })\n    .then(data => {\n      setInfo(data) \n    })\n    // Switch isLoading to false once fetch is done\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <>\n      <h1>Straw Hat Pirates</h1>\n      <Gallery props={info} loading={isLoading}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}